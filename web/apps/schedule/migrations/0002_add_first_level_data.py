# Generated by Django 4.1.7

from django.db import migrations
from datetime import time


def create_lesson_numbers(apps, schema_editor):
    LessonNumber = apps.get_model("schedule", "LessonNumber")
    lesson_numbers = [
        {
            'number': 1,
            'start_time': time(hour=9, minute=30),
            'end_time': time(hour=10, minute=30)
        },
        {
            'number': 2,
            'start_time': time(hour=10, minute=40),
            'end_time': time(hour=13, minute=10)
        },
        {
            'number': 3,
            'start_time': time(hour=12, minute=50),
            'end_time': time(hour=14, minute=20)
        },
        {
            'number': 4,
            'start_time': time(hour=14, minute=30),
            'end_time': time(hour=16, minute=00)
        },
        {
            'number': 5,
            'start_time': time(hour=16, minute=10),
            'end_time': time(hour=17, minute=40)
        },
        {
            'number': 6,
            'start_time': time(hour=17, minute=50),
            'end_time': time(hour=19, minute=20)
        },
        {
            'number': 7,
            'start_time': time(hour=19, minute=30),
            'end_time': time(hour=21, minute=00)
        },
    ]
    for lesson_number in lesson_numbers:
        LessonNumber(
            number=lesson_number['number'], 
            start_time=lesson_number['start_time'],
            end_time=lesson_number['end_time']
        ).save()
        
def create_housings(apps, schema_editor):
    Housing = apps.get_model("schedule", "Housing")
    housings = [
        {
            'name': 'Главный корпус',
            'floors_quantity': 6
        },
        {
            'name': 'Второй корпус',
            'floors_quantity': 5
        },
        {
            'name': 'Третий корпус',
            'floors_quantity': 2
        },
        {
            'name': 'Старый корпус',
            'floors_quantity': 3
        },
    ]
    for housing in housings:
        Housing(
            name=housing['name'],
            floors_quantity=housing['floors_quantity']
        ).save()
        
def create_classroom_types(apps, schema_editor):
    ClassroomType = apps.get_model("schedule", "ClassroomType")
    classroom_types = [
        'Лекционная',
        'Практическая',
        'Компьютерная'
    ]
    for classroom_type in classroom_types:
        ClassroomType(
            name=classroom_type,
        ).save()
        
def create_lesson_types(apps, schema_editor):
    LessonType = apps.get_model("schedule", "LessonType")
    lesson_types = [
        'Лекция',
        'Практика',
    ]
    for lesson_type in lesson_types:
        LessonType(
            name=lesson_type,
        ).save()
        

def create_direction_training_types(apps, schema_editor):
    DirectionTrainingType = apps.get_model("schedule", "DirectionTrainingType")
    direction_training_types = [
        'Бакалавриат',
        'Магистратура',
        'Аспирантура',
        'Специалитет'
    ]
    for direction_training_type in direction_training_types:
        DirectionTrainingType(
            name=direction_training_type,
        ).save()

class Migration(migrations.Migration):
    dependencies = [
        ("schedule", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(create_lesson_numbers),
        migrations.RunPython(create_housings),
        migrations.RunPython(create_classroom_types),
        migrations.RunPython(create_lesson_types),
        migrations.RunPython(create_direction_training_types),
    ]
